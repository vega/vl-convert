[package]
name = "vl-convert-rs"
version = "1.8.0"
edition = "2021"
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://github.com/jonmmease/vl-convert"
repository = "https://github.com/jonmmease/vl-convert"
description = "Library for converting Vega-Lite visualization specifications to Vega specifications"
keywords = ["Visualization", "Vega", "Vega-Lite"]

[dependencies]
deno_runtime = { workspace = true }
deno_core = { workspace = true }
deno_emit = { workspace = true }
deno_graph = { workspace = true }
serde = { workspace = true }
futures = { workspace = true }
futures-util = { workspace = true }
reqwest = { workspace = true }
usvg = { workspace = true }
resvg = { workspace = true }
tiny-skia = { workspace = true }
svg2pdf = { workspace = true }
ttf-parser = { workspace = true }
png = { workspace = true }
fontdb = { workspace = true }
log = { workspace = true }
env_logger = { workspace = true }
image = { workspace = true }
lz-str = { workspace = true }
regex = { workspace = true }
tokio = { workspace = true }
serde_json = { workspace = true }
tempfile = { workspace = true }
lazy_static = { workspace = true }

[dev-dependencies]
rstest = { workspace = true }
dssim = { workspace = true }

# For macOS 15 "Sequoia" with Xcode 16:
# The version of libffi-rs that is pulled in by deno_core still pulls in
# libffi-sys 2.3.0, whose AArch64 assembly triggers "invalid CFI
# advance_loc expression” errors with Apple’s LLVM 17 assembler.
# Upstream fixed the CFI directives in **libffi 3.4.7** (see libffi/libffi #852)
# and the breakage is tracked in libffi-rs #109. But we can't update this without
# updating deno_core. Instead, we link against a system
# libffi (≥ 3.4.x) by enabling the `system` feature below.
# This system version is installed using pixi.
# [oai_citation:0‡GitHub](https://github.com/libffi/libffi/issues/852)
[target.'cfg(target_os = "macos")'.dependencies.libffi]
version = "^3.2.0"
features = ["system"]

import{permute as C,bisectLeft as L,bisectRight as O}from"/-/d3-array@v3.2.4-G4hy00bPnjF6FrSYpT32/dist=es2020,mode=imports,min/optimized/d3-array.js";import{Transform as M}from"/-/vega-dataflow@v5.7.6-WDoszrJUyhTwz7sPwzda/dist=es2020,mode=imports,min/optimized/vega-dataflow.js";import{inherits as F}from"/-/vega-util@v1.17.2-LUfkDhormMyfWqy3Ts6U/dist=es2020,mode=imports,min/optimized/vega-util.js";const P=e=>new Uint8Array(e),S=e=>new Uint16Array(e),b=e=>new Uint32Array(e);function T(){let e=8,t=[],r=b(0),o=k(0,e),l=k(0,e);return{data:()=>t,seen:()=>r=_(r,t.length),add(s){for(let a=0,f=t.length,d=s.length,n;a<d;++a)n=s[a],n._index=f++,t.push(n)},remove(s,a){const f=t.length,d=Array(f-s),n=t;let h,i,c;for(i=0;!a[i]&&i<f;++i)d[i]=t[i],n[i]=i;for(c=i;i<f;++i)h=t[i],a[i]?n[i]=-1:(n[i]=c,o[c]=o[i],l[c]=l[i],d[c]=h,h._index=c++),o[i]=0;return t=d,n},size:()=>t.length,curr:()=>o,prev:()=>l,reset:s=>l[s]=o[s],all:()=>e<257?255:e<65537?65535:4294967295,set(s,a){o[s]|=a},clear(s,a){o[s]&=~a},resize(s,a){const f=o.length;(s>f||a>e)&&(e=Math.max(a,e),o=k(s,e,o),l=k(s,e))}}}function _(e,t,r){return e.length>=t?e:(r=r||new e.constructor(t),r.set(e),r)}function k(e,t,r){const o=(t<257?P:t<65537?S:b)(e);return r&&o.set(r),o}function U(e,t,r){const o=1<<t;return{one:o,zero:~o,range:r.slice(),bisect:e.bisect,index:e.index,size:e.size,onAdd(l,s){const a=this,f=a.bisect(a.range,l.value),d=l.index,n=f[0],h=f[1],i=d.length;let c;for(c=0;c<n;++c)s[d[c]]|=o;for(c=h;c<i;++c)s[d[c]]|=o;return a}}}function R(){let e=b(0),t=[],r=0;function o(f,d,n){if(!d.length)return[];const h=r,i=d.length,c=b(i);let u=Array(i),g,p,m;for(m=0;m<i;++m)u[m]=f(d[m]),c[m]=m;if(u=E(u,c),h)g=t,p=e,t=Array(h+i),e=b(h+i),W(n,g,p,h,u,c,i,t,e);else{if(n>0)for(m=0;m<i;++m)c[m]+=n;t=u,e=c}return r=h+i,{index:c,value:u}}function l(f,d){const n=r;let h,i,c;for(i=0;!d[e[i]]&&i<n;++i);for(c=i;i<n;++i)d[h=e[i]]||(e[c]=h,t[c]=t[i],++c);r=n-f}function s(f){for(let d=0,n=r;d<n;++d)e[d]=f[e[d]]}function a(f,d){let n;return d?n=d.length:(d=t,n=r),[L(d,f[0],0,n),O(d,f[1],0,n)]}return{insert:o,remove:l,bisect:a,reindex:s,index:()=>e,size:()=>r}}function E(e,t){return e.sort.call(t,(r,o)=>{const l=e[r],s=e[o];return l<s?-1:l>s?1:0}),C(e,t)}function W(e,t,r,o,l,s,a,f,d){let n=0,h=0,i;for(i=0;n<o&&h<a;++i)t[n]<l[h]?(f[i]=t[n],d[i]=r[n++]):(f[i]=l[h],d[i]=s[h++]+e);for(;n<o;++n,++i)f[i]=t[n],d[i]=r[n];for(;h<a;++h,++i)f[i]=l[h],d[i]=s[h]+e}function j(e){M.call(this,T(),e),this._indices=null,this._dims=null}j.Definition={type:"CrossFilter",metadata:{},params:[{name:"fields",type:"field",array:!0,required:!0},{name:"query",type:"array",array:!0,required:!0,content:{type:"number",array:!0,length:2}}]},F(j,M,{transform(e,t){if(this._dims){var r=e.modified("fields")||e.fields.some(o=>t.modified(o.fields));return r?this.reinit(e,t):this.eval(e,t)}else return this.init(e,t)},init(e,t){const r=e.fields,o=e.query,l=this._indices={},s=this._dims=[],a=o.length;let f=0,d,n;for(;f<a;++f)d=r[f].fname,n=l[d]||(l[d]=R()),s.push(U(n,f,o[f]));return this.eval(e,t)},reinit(e,t){const r=t.materialize().fork(),o=e.fields,l=e.query,s=this._indices,a=this._dims,f=this.value,d=f.curr(),n=f.prev(),h=f.all(),i=r.rem=r.add,c=r.mod,u=l.length,g={};let p,m,y,v,D,q,x,z,A;if(n.set(d),t.rem.length&&(D=this.remove(e,t,r)),t.add.length&&f.add(t.add),t.mod.length)for(q={},v=t.mod,x=0,z=v.length;x<z;++x)q[v[x]._index]=1;for(x=0;x<u;++x)A=o[x],(!a[x]||e.modified("fields",x)||t.modified(A.fields))&&(y=A.fname,(p=g[y])||(s[y]=m=R(),g[y]=p=m.insert(A,t.source,0)),a[x]=U(m,x,l[x]).onAdd(p,d));for(x=0,z=f.data().length;x<z;++x){if(D[x])continue;n[x]!==d[x]?i.push(x):q[x]&&d[x]!==h&&c.push(x)}return f.mask=(1<<u)-1,r},eval(e,t){const r=t.materialize().fork(),o=this._dims.length;let l=0;return t.rem.length&&(this.remove(e,t,r),l|=(1<<o)-1),e.modified("query")&&!e.modified("fields")&&(l|=this.update(e,t,r)),t.add.length&&(this.insert(e,t,r),l|=(1<<o)-1),t.mod.length&&(this.modify(t,r),l|=(1<<o)-1),this.value.mask=l,r},insert(e,t,r){const o=t.add,l=this.value,s=this._dims,a=this._indices,f=e.fields,d={},n=r.add,h=l.size()+o.length,i=s.length;let c=l.size(),u,g,p;l.resize(h,i),l.add(o);const m=l.curr(),y=l.prev(),v=l.all();for(u=0;u<i;++u)g=f[u].fname,p=d[g]||(d[g]=a[g].insert(f[u],o,c)),s[u].onAdd(p,m);for(;c<h;++c)y[c]=v,m[c]!==v&&n.push(c)},modify(e,t){const r=t.mod,o=this.value,l=o.curr(),s=o.all(),a=e.mod;let f,d,n;for(f=0,d=a.length;f<d;++f)n=a[f]._index,l[n]!==s&&r.push(n)},remove(e,t,r){const o=this._indices,l=this.value,s=l.curr(),a=l.prev(),f=l.all(),d={},n=r.rem,h=t.rem;let i,c,u,g;for(i=0,c=h.length;i<c;++i)u=h[i]._index,d[u]=1,a[u]=g=s[u],s[u]=f,g!==f&&n.push(u);for(u in o)o[u].remove(c,d);return this.reindex(t,c,d),d},reindex(e,t,r){const o=this._indices,l=this.value;e.runAfter(()=>{const s=l.remove(t,r);for(const a in o)o[a].reindex(s)})},update(e,t,r){const o=this._dims,l=e.query,s=t.stamp,a=o.length;let f=0,d,n;for(r.filters=0,n=0;n<a;++n)e.modified("query",n)&&(d=n,++f);if(f===1)f=o[d].one,this.incrementOne(o[d],l[d],r.add,r.rem);else for(n=0,f=0;n<a;++n){if(!e.modified("query",n))continue;f|=o[n].one,this.incrementAll(o[n],l[n],s,r.add),r.rem=r.add}return f},incrementAll(e,t,r,o){const l=this.value,s=l.seen(),a=l.curr(),f=l.prev(),d=e.index(),n=e.bisect(e.range),h=e.bisect(t),i=h[0],c=h[1],u=n[0],g=n[1],p=e.one;let m,y,v;if(i<u)for(m=i,y=Math.min(u,c);m<y;++m)v=d[m],s[v]!==r&&(f[v]=a[v],s[v]=r,o.push(v)),a[v]^=p;else if(i>u)for(m=u,y=Math.min(i,g);m<y;++m)v=d[m],s[v]!==r&&(f[v]=a[v],s[v]=r,o.push(v)),a[v]^=p;if(c>g)for(m=Math.max(i,g),y=c;m<y;++m)v=d[m],s[v]!==r&&(f[v]=a[v],s[v]=r,o.push(v)),a[v]^=p;else if(c<g)for(m=Math.max(u,c),y=g;m<y;++m)v=d[m],s[v]!==r&&(f[v]=a[v],s[v]=r,o.push(v)),a[v]^=p;e.range=t.slice()},incrementOne(e,t,r,o){const l=this.value,s=l.curr(),a=e.index(),f=e.bisect(e.range),d=e.bisect(t),n=d[0],h=d[1],i=f[0],c=f[1],u=e.one;let g,p,m;if(n<i)for(g=n,p=Math.min(i,h);g<p;++g)m=a[g],s[m]^=u,r.push(m);else if(n>i)for(g=i,p=Math.min(n,c);g<p;++g)m=a[g],s[m]^=u,o.push(m);if(h>c)for(g=Math.max(n,c),p=h;g<p;++g)m=a[g],s[m]^=u,r.push(m);else if(h<c)for(g=Math.max(i,h),p=c;g<p;++g)m=a[g],s[m]^=u,o.push(m);e.range=t.slice()}});function w(e){M.call(this,null,e)}w.Definition={type:"ResolveFilter",metadata:{},params:[{name:"ignore",type:"number",required:!0,description:"A bit mask indicating which filters to ignore."},{name:"filter",type:"object",required:!0,description:"Per-tuple filter bitmaps from a CrossFilter transform."}]},F(w,M,{transform(e,t){const r=~(e.ignore||0),o=e.filter,l=o.mask;if((l&r)===0)return t.StopPropagation;const s=t.fork(t.ALL),a=o.data(),f=o.curr(),d=o.prev(),n=h=>f[h]&r?null:a[h];return s.filter(s.MOD,n),l&l-1?(s.filter(s.ADD,h=>{const i=f[h]&r,c=!i&&i^d[h]&r;return c?a[h]:null}),s.filter(s.REM,h=>{const i=f[h]&r,c=i&&!(i^(i^d[h]&r));return c?a[h]:null})):(s.filter(s.ADD,n),s.filter(s.REM,h=>(f[h]&r)===l?a[h]:null)),s.filter(s.SOURCE,h=>n(h._index))}});export{j as crossfilter,w as resolvefilter};export default null;

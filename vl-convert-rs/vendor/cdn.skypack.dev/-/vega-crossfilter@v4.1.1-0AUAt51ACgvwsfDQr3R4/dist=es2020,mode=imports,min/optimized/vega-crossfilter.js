import{permute as O,bisectLeft as S,bisectRight as C}from"/-/d3-array@v3.2.2-mREp9VYvdluM4XTkemzD/dist=es2020,mode=imports,min/optimized/d3-array.js";import{Transform as A}from"/-/vega-dataflow@v5.7.5-asKYS4gpPLMPf64pSozt/dist=es2020,mode=imports,min/optimized/vega-dataflow.js";import{inherits as R}from"/-/vega-util@v1.17.1-uwuqwLZrXXBeO0DFYRgh/dist=es2020,mode=imports,min/optimized/vega-util.js";const E=e=>new Uint8Array(e),P=e=>new Uint16Array(e),b=e=>new Uint32Array(e);function U(){let e=8,t=[],r=b(0),o=k(0,e),d=k(0,e);return{data:()=>t,seen:()=>r=_(r,t.length),add(s){for(let a=0,f=t.length,l=s.length,n;a<l;++a)n=s[a],n._index=f++,t.push(n)},remove(s,a){const f=t.length,l=Array(f-s),n=t;let m,i,c;for(i=0;!a[i]&&i<f;++i)l[i]=t[i],n[i]=i;for(c=i;i<f;++i)m=t[i],a[i]?n[i]=-1:(n[i]=c,o[c]=o[i],d[c]=d[i],l[c]=m,m._index=c++),o[i]=0;return t=l,n},size:()=>t.length,curr:()=>o,prev:()=>d,reset:s=>d[s]=o[s],all:()=>e<257?255:e<65537?65535:4294967295,set(s,a){o[s]|=a},clear(s,a){o[s]&=~a},resize(s,a){const f=o.length;(s>f||a>e)&&(e=Math.max(a,e),o=k(s,e,o),d=k(s,e))}}}function _(e,t,r){return e.length>=t?e:(r=r||new e.constructor(t),r.set(e),r)}function k(e,t,r){const o=(t<257?E:t<65537?P:b)(e);return r&&o.set(r),o}function F(e,t,r){const o=1<<t;return{one:o,zero:~o,range:r.slice(),bisect:e.bisect,index:e.index,size:e.size,onAdd(d,s){const a=this,f=a.bisect(a.range,d.value),l=d.index,n=f[0],m=f[1],i=l.length;let c;for(c=0;c<n;++c)s[l[c]]|=o;for(c=m;c<i;++c)s[l[c]]|=o;return a}}}function L(){let e=b(0),t=[],r=0;function o(f,l,n){if(!l.length)return[];const m=r,i=l.length,c=b(i);let u=Array(i),g,v,h;for(h=0;h<i;++h)u[h]=f(l[h]),c[h]=h;if(u=X(u,c),m)g=t,v=e,t=Array(m+i),e=b(m+i),Y(n,g,v,m,u,c,i,t,e);else{if(n>0)for(h=0;h<i;++h)c[h]+=n;t=u,e=c}return r=m+i,{index:c,value:u}}function d(f,l){const n=r;let m,i,c;for(i=0;!l[e[i]]&&i<n;++i);for(c=i;i<n;++i)l[m=e[i]]||(e[c]=m,t[c]=t[i],++c);r=n-f}function s(f){for(let l=0,n=r;l<n;++l)e[l]=f[e[l]]}function a(f,l){let n;return l?n=l.length:(l=t,n=r),[S(l,f[0],0,n),C(l,f[1],0,n)]}return{insert:o,remove:d,bisect:a,reindex:s,index:()=>e,size:()=>r}}function X(e,t){return e.sort.call(t,(r,o)=>{const d=e[r],s=e[o];return d<s?-1:d>s?1:0}),O(e,t)}function Y(e,t,r,o,d,s,a,f,l){let n=0,m=0,i;for(i=0;n<o&&m<a;++i)t[n]<d[m]?(f[i]=t[n],l[i]=r[n++]):(f[i]=d[m],l[i]=s[m++]+e);for(;n<o;++n,++i)f[i]=t[n],l[i]=r[n];for(;m<a;++m,++i)f[i]=d[m],l[i]=s[m]+e}function j(e){A.call(this,U(),e),this._indices=null,this._dims=null}j.Definition={type:"CrossFilter",metadata:{},params:[{name:"fields",type:"field",array:!0,required:!0},{name:"query",type:"array",array:!0,required:!0,content:{type:"number",array:!0,length:2}}]},R(j,A,{transform(e,t){if(this._dims){var r=e.modified("fields")||e.fields.some(o=>t.modified(o.fields));return r?this.reinit(e,t):this.eval(e,t)}else return this.init(e,t)},init(e,t){const r=e.fields,o=e.query,d=this._indices={},s=this._dims=[],a=o.length;let f=0,l,n;for(;f<a;++f)l=r[f].fname,n=d[l]||(d[l]=L()),s.push(F(n,f,o[f]));return this.eval(e,t)},reinit(e,t){const r=t.materialize().fork(),o=e.fields,d=e.query,s=this._indices,a=this._dims,f=this.value,l=f.curr(),n=f.prev(),m=f.all(),i=r.rem=r.add,c=r.mod,u=d.length,g={};let v,h,y,p,D,q,x,z,M;if(n.set(l),t.rem.length&&(D=this.remove(e,t,r)),t.add.length&&f.add(t.add),t.mod.length)for(q={},p=t.mod,x=0,z=p.length;x<z;++x)q[p[x]._index]=1;for(x=0;x<u;++x)M=o[x],(!a[x]||e.modified("fields",x)||t.modified(M.fields))&&(y=M.fname,(v=g[y])||(s[y]=h=L(),g[y]=v=h.insert(M,t.source,0)),a[x]=F(h,x,d[x]).onAdd(v,l));for(x=0,z=f.data().length;x<z;++x){if(D[x])continue;n[x]!==l[x]?i.push(x):q[x]&&l[x]!==m&&c.push(x)}return f.mask=(1<<u)-1,r},eval(e,t){const r=t.materialize().fork(),o=this._dims.length;let d=0;return t.rem.length&&(this.remove(e,t,r),d|=(1<<o)-1),e.modified("query")&&!e.modified("fields")&&(d|=this.update(e,t,r)),t.add.length&&(this.insert(e,t,r),d|=(1<<o)-1),t.mod.length&&(this.modify(t,r),d|=(1<<o)-1),this.value.mask=d,r},insert(e,t,r){const o=t.add,d=this.value,s=this._dims,a=this._indices,f=e.fields,l={},n=r.add,m=d.size()+o.length,i=s.length;let c=d.size(),u,g,v;d.resize(m,i),d.add(o);const h=d.curr(),y=d.prev(),p=d.all();for(u=0;u<i;++u)g=f[u].fname,v=l[g]||(l[g]=a[g].insert(f[u],o,c)),s[u].onAdd(v,h);for(;c<m;++c)y[c]=p,h[c]!==p&&n.push(c)},modify(e,t){const r=t.mod,o=this.value,d=o.curr(),s=o.all(),a=e.mod;let f,l,n;for(f=0,l=a.length;f<l;++f)n=a[f]._index,d[n]!==s&&r.push(n)},remove(e,t,r){const o=this._indices,d=this.value,s=d.curr(),a=d.prev(),f=d.all(),l={},n=r.rem,m=t.rem;let i,c,u,g;for(i=0,c=m.length;i<c;++i)u=m[i]._index,l[u]=1,a[u]=g=s[u],s[u]=f,g!==f&&n.push(u);for(u in o)o[u].remove(c,l);return this.reindex(t,c,l),l},reindex(e,t,r){const o=this._indices,d=this.value;e.runAfter(()=>{const s=d.remove(t,r);for(const a in o)o[a].reindex(s)})},update(e,t,r){const o=this._dims,d=e.query,s=t.stamp,a=o.length;let f=0,l,n;for(r.filters=0,n=0;n<a;++n)e.modified("query",n)&&(l=n,++f);if(f===1)f=o[l].one,this.incrementOne(o[l],d[l],r.add,r.rem);else for(n=0,f=0;n<a;++n){if(!e.modified("query",n))continue;f|=o[n].one,this.incrementAll(o[n],d[n],s,r.add),r.rem=r.add}return f},incrementAll(e,t,r,o){const d=this.value,s=d.seen(),a=d.curr(),f=d.prev(),l=e.index(),n=e.bisect(e.range),m=e.bisect(t),i=m[0],c=m[1],u=n[0],g=n[1],v=e.one;let h,y,p;if(i<u)for(h=i,y=Math.min(u,c);h<y;++h)p=l[h],s[p]!==r&&(f[p]=a[p],s[p]=r,o.push(p)),a[p]^=v;else if(i>u)for(h=u,y=Math.min(i,g);h<y;++h)p=l[h],s[p]!==r&&(f[p]=a[p],s[p]=r,o.push(p)),a[p]^=v;if(c>g)for(h=Math.max(i,g),y=c;h<y;++h)p=l[h],s[p]!==r&&(f[p]=a[p],s[p]=r,o.push(p)),a[p]^=v;else if(c<g)for(h=Math.max(u,c),y=g;h<y;++h)p=l[h],s[p]!==r&&(f[p]=a[p],s[p]=r,o.push(p)),a[p]^=v;e.range=t.slice()},incrementOne(e,t,r,o){const d=this.value,s=d.curr(),a=e.index(),f=e.bisect(e.range),l=e.bisect(t),n=l[0],m=l[1],i=f[0],c=f[1],u=e.one;let g,v,h;if(n<i)for(g=n,v=Math.min(i,m);g<v;++g)h=a[g],s[h]^=u,r.push(h);else if(n>i)for(g=i,v=Math.min(n,c);g<v;++g)h=a[g],s[h]^=u,o.push(h);if(m>c)for(g=Math.max(n,c),v=m;g<v;++g)h=a[g],s[h]^=u,r.push(h);else if(m<c)for(g=Math.max(i,m),v=c;g<v;++g)h=a[g],s[h]^=u,o.push(h);e.range=t.slice()}});function w(e){A.call(this,null,e)}w.Definition={type:"ResolveFilter",metadata:{},params:[{name:"ignore",type:"number",required:!0,description:"A bit mask indicating which filters to ignore."},{name:"filter",type:"object",required:!0,description:"Per-tuple filter bitmaps from a CrossFilter transform."}]},R(w,A,{transform(e,t){const r=~(e.ignore||0),o=e.filter,d=o.mask;if((d&r)===0)return t.StopPropagation;const s=t.fork(t.ALL),a=o.data(),f=o.curr(),l=o.prev(),n=m=>f[m]&r?null:a[m];return s.filter(s.MOD,n),d&d-1?(s.filter(s.ADD,m=>{const i=f[m]&r,c=!i&&i^l[m]&r;return c?a[m]:null}),s.filter(s.REM,m=>{const i=f[m]&r,c=i&&!(i^(i^l[m]&r));return c?a[m]:null})):(s.filter(s.ADD,n),s.filter(s.REM,m=>(f[m]&r)===d?a[m]:null)),s.filter(s.SOURCE,m=>n(m._index))}});export{j as crossfilter,w as resolvefilter};export default null;

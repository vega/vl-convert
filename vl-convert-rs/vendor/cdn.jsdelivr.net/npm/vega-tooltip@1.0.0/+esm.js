/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.39.0.
 * Original file: /npm/vega-tooltip@1.0.0/build/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{isArray as t,isString as e,isObject as n}from"/npm/vega-util@2.0.0/+esm";var i="1.0.0";function o(i,o,l,r){if(t(i))return`[${i.map((t=>o(e(t)?t:s(t,l)))).join(", ")}]`;if(n(i)){let t="";const{title:e,image:d,...h}=i;e&&(t+=`<h2>${o(e)}</h2>`),d&&(t+=`<img src="${new URL(o(d),r||location.href).href}">`);const p=Object.keys(h);if(p.length>0){t+="<table>";for(const e of p){let i=h[e];void 0!==i&&(n(i)&&(i=s(i,l)),t+=`<tr><td class="key">${o(e)}</td><td class="value">${o(i)}</td></tr>`)}t+="</table>"}return t||"{}"}return o(i)}function l(t){const e=[];return function(n,i){if("object"!=typeof i||null===i)return i;const o=e.indexOf(this)+1;return e.length=o,e.length>t?"[Object]":e.indexOf(i)>=0?"[Circular]":(e.push(i),i)}}function s(t,e){return JSON.stringify(t,l(e))}var r="#vg-tooltip-element {\n  visibility: hidden;\n  padding: 8px;\n  position: fixed;\n  z-index: 1000;\n  font-family: sans-serif;\n  font-size: 11px;\n  border-radius: 3px;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n  /* The default theme is the light theme. */\n  background-color: rgba(255, 255, 255, 0.95);\n  border: 1px solid #d9d9d9;\n  color: black;\n}\n#vg-tooltip-element.visible {\n  visibility: visible;\n}\n#vg-tooltip-element h2 {\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-size: 13px;\n}\n#vg-tooltip-element table {\n  border-spacing: 0;\n}\n#vg-tooltip-element table tr {\n  border: none;\n}\n#vg-tooltip-element table tr td {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-top: 2px;\n  padding-bottom: 2px;\n}\n#vg-tooltip-element table tr td.key {\n  color: #808080;\n  max-width: 150px;\n  text-align: right;\n  padding-right: 4px;\n}\n#vg-tooltip-element table tr td.value {\n  display: block;\n  max-width: 300px;\n  max-height: 7em;\n  text-align: left;\n}\n#vg-tooltip-element.dark-theme {\n  background-color: rgba(32, 32, 32, 0.9);\n  border: 1px solid #f5f5f5;\n  color: white;\n}\n#vg-tooltip-element.dark-theme td.key {\n  color: #bfbfbf;\n}\n";const d="vg-tooltip-element",h={offsetX:10,offsetY:10,id:d,styleId:"vega-tooltip-style",theme:"light",disableDefaultStyle:!1,sanitize:p,maxDepth:2,formatTooltip:o,baseURL:"",anchor:"cursor",position:["top","bottom","left","right","top-left","top-right","bottom-left","bottom-right"]};function p(t){return String(t).replace(/&/g,"&amp;").replace(/</g,"&lt;")}function a(t){if(!/^[A-Za-z]+[-:.\w]*$/.test(t))throw new Error("Invalid HTML ID");return r.toString().replaceAll(d,t)}function c(t,e,{offsetX:n,offsetY:i}){const o=u({x1:t.clientX,x2:t.clientX,y1:t.clientY,y2:t.clientY},e,n,i),l=["bottom-right","bottom-left","top-right","top-left"];for(const t of l)if(m(o[t],e))return o[t];return o["top-left"]}function f(t,e,n,i,o){const{position:l,offsetX:s,offsetY:r}=o,d=u(g(t._el.getBoundingClientRect(),t._origin,n),i,s,r),h=Array.isArray(l)?l:[l];for(const t of h)if(m(d[t],i)&&!x(e,d[t],i))return d[t];return c(e,i,o)}function g(t,e,n){const i=n.isVoronoi?n.datum.bounds:n.bounds;let o=t.left+e[0]+i.x1,l=t.top+e[1]+i.y1,s=n;for(;s.mark.group;)s=s.mark.group,o+=s.x??0,l+=s.y??0;return{x1:o,x2:o+(i.x2-i.x1),y1:l,y2:l+(i.y2-i.y1)}}function u(t,e,n,i){const o=(t.x1+t.x2)/2,l=(t.y1+t.y2)/2,s=t.x1-e.width-n,r=o-e.width/2,d=t.x2+n,h=t.y1-e.height-i,p=l-e.height/2,a=t.y2+i;return{top:{x:r,y:h},bottom:{x:r,y:a},left:{x:s,y:p},right:{x:d,y:p},"top-left":{x:s,y:h},"top-right":{x:d,y:h},"bottom-left":{x:s,y:a},"bottom-right":{x:d,y:a}}}function m(t,e){return t.x>=0&&t.y>=0&&t.x+e.width<=window.innerWidth&&t.y+e.height<=window.innerHeight}function x(t,e,n){return t.clientX>=e.x&&t.clientX<=e.x+n.width&&t.clientY>=e.y&&t.clientY<=e.y+n.height}class b{call;options;el;constructor(t){this.options={...h,...t};const e=this.options.id;if(this.el=null,this.call=this.tooltipHandler.bind(this),!this.options.disableDefaultStyle&&!document.getElementById(this.options.styleId)){const t=document.createElement("style");t.setAttribute("id",this.options.styleId),t.innerHTML=a(e);const n=document.head;n.childNodes.length>0?n.insertBefore(t,n.childNodes[0]):n.appendChild(t)}}tooltipHandler(t,e,n,i){if(this.el=document.getElementById(this.options.id),!this.el){this.el=document.createElement("div"),this.el.setAttribute("id",this.options.id),this.el.classList.add("vg-tooltip");(document.fullscreenElement??document.body).appendChild(this.el)}if(null==i||""===i)return void this.el.classList.remove("visible",`${this.options.theme}-theme`);this.el.innerHTML=this.options.formatTooltip(i,this.options.sanitize,this.options.maxDepth,this.options.baseURL),this.el.classList.add("visible",`${this.options.theme}-theme`);const{x:o,y:l}="mark"===this.options.anchor?f(t,e,n,this.el.getBoundingClientRect(),this.options):c(e,this.el.getBoundingClientRect(),this.options);this.el.style.top=`${l}px`,this.el.style.left=`${o}px`}}const y=i;function v(t,e){const n=new b(e);return t.tooltip(n.call).run(),n}export{h as DEFAULT_OPTIONS,b as Handler,c as calculatePositionRelativeToCursor,f as calculatePositionRelativeToMark,a as createDefaultStyle,v as default,p as escapeHTML,o as formatValue,g as getMarkBounds,u as getPositions,x as mouseIsOnTooltip,l as replacer,s as stringify,m as tooltipIsInViewport,y as version};
//# sourceMappingURL=/sm/b4bf5c78923c913024aaa754c107396f783b36930cd58b8b6386f1ad4998faa5.map